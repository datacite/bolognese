---
http_interactions:
- request:
    method: get
    uri: https://doi.org/ra/10.4018
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.9; mailto:info@datacite.org)
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: ''
    headers:
      Date:
      - Sun, 06 Jun 2021 11:57:02 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Connection:
      - keep-alive
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 0a82c8111a0000d72db3a95000000001
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v2?s=VaZhLQOCmVAZ54wSdOib1KXDNlD%2FrWoMRZ4htlzjmLPyjIfBZbPUKVWzJrJnW9EZD9ejkGrw2Yd6zMR6kIwGp28lE%2Fajhi3qEv9AzbZzVc2Ps6Lnt%2FhjgAJAOIlK%2BGwS"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"report_to":"cf-nel","max_age":604800}'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 65b175fb5f9fd72d-FRA
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: |-
        [
          {
            "DOI": "10.4018",
            "RA": "Crossref"
          }
        ]
    http_version:
  recorded_at: Sun, 06 Jun 2021 11:56:53 GMT
- request:
    method: get
    uri: https://api.crossref.org/works/10.4018/978-1-4666-1891-6.ch004/transform/application/vnd.crossref.unixsd+xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.9; mailto:info@datacite.org)
      Accept:
      - text/xml
  response:
    status:
      code: 200
      message: OK
    headers:
      Link:
      - <http://dx.doi.org/10.4018/978-1-4666-1891-6.ch004>; rel="canonical", <https://www.igi-global.com/viewtitle.aspx?TitleId=69071>;
        version="vor"; rel="item"
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - X-Requested-With
      Content-Length:
      - '15397'
      Server:
      - http-kit
      Date:
      - Sun, 06 Jun 2021 11:57:03 GMT
      X-Rate-Limit-Limit:
      - '50'
      X-Rate-Limit-Interval:
      - 1s
      Permissions-Policy:
      - interest-cohort=()
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Sun, 06 Jun 2021 11:56:54 GMT
recorded_with: VCR 3.0.3
